/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clinicsadministration;

import java.awt.ComponentOrientation;
import java.awt.Font;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author engmu
 */
public class InformationCilncAndServicesPanel extends javax.swing.JPanel {

    int row = -1;
    Vector<String> idclincname = new Vector();

    /**
     * Creates new form InformationCilncAndServices
     */
    public InformationCilncAndServicesPanel() {
        initComponents();
        Tools.HeaderRendererCenter(table);
        Tools.rowRenderCenter(table);
        Tools.HeaderRendererCenter(tableservice);
        Tools.rowRenderCenter(tableservice);
        Tools.setComponentBackGroundColor(this);
        Tools.setScrollBackGroundColor(jScrollPane1);
        Tools.setScrollBackGroundColor(jScrollPane3);
        updateTable();
    }

    public void updateTable() {
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);
        idclincname.removeAllElements();
        String statement = "SELECT * FROM clincname ;";
        ResultSet rs = Tools.select_query(statement);
        try {
            while (rs.next()) {
                idclincname.add(rs.getString(1));
                Vector v = new Vector();
                v.add(rs.getString(2));
                v.add(rs.getString(3));
                model.addRow(v);
            }
        } catch (Exception ex) {
        }
        Tools.closeConnection();
    }

    public void resetValue() {
        DefaultTableModel model = (DefaultTableModel) tableservice.getModel();
        model.setRowCount(0);
        txtname.setText("");
        txtprice.setText("");
    }

    public void getTableService(String id) {
        String statement = "SELECT * FROM clincservice WHERE id = " + id + " ;";
        DefaultTableModel model = (DefaultTableModel) tableservice.getModel();
        Tools.tableUpdate(model, statement, 4);
        for(int i=0; i<tableservice.getRowCount(); i++)
            tableservice.setValueAt(i+1, i, 0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtname = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtprice = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableservice = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        btnupdate = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        table.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        table.getTableHeader().setFont(new Font("NewTimeRoman", Font.BOLD, 18));
        table.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Clinic Name", " Detection price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setGridColor(new java.awt.Color(0, 255, 255));
        table.setRowHeight(40);
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Clinic Name");

        txtname.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtname.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Detection price");

        txtprice.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtprice.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        tableservice.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        tableservice.getTableHeader().setFont(new Font("NewTimeRoman", Font.BOLD, 18));
        tableservice.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
        tableservice.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Number", "Service Name", "Service price", "Description"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableservice.setGridColor(new java.awt.Color(0, 255, 255));
        tableservice.setRowHeight(40);
        tableservice.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableserviceMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tableservice);
        if (tableservice.getColumnModel().getColumnCount() > 0) {
            tableservice.getColumnModel().getColumn(1).setPreferredWidth(200);
            tableservice.getColumnModel().getColumn(3).setPreferredWidth(250);
        }

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add-product.png"))); // NOI18N
        jButton1.setToolTipText("اضافه خدمه جديده الى الجدول");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/delete.png"))); // NOI18N
        jButton2.setToolTipText("حذف خدمه من الجدول");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        btnupdate.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnupdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/update_1.png"))); // NOI18N
        btnupdate.setText("Edit");
        btnupdate.setToolTipText("تعديل معلومات العياده");
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });

        btndelete.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btndelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/delete.png"))); // NOI18N
        btndelete.setText("Delete");
        btndelete.setToolTipText("حذف العياده نهائيا من قاعده البيانات");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Services");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 497, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(txtprice)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 803, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnupdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btndelete, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(303, 303, 303)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(63, 63, 63)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtprice, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(210, 210, 210)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(195, 195, 195)
                        .addComponent(btnupdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btndelete))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(17, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tableserviceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableserviceMouseClicked
        // TODO add your handling code here:
        row = tableservice.getSelectedRow();
    }//GEN-LAST:event_tableserviceMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tableservice.getModel();
        model.addRow(new Vector());
        tableservice.setValueAt(tableservice.getRowCount(), tableservice.getRowCount() - 1, 0);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if (row > -1) {
            try {
                DefaultTableModel model = (DefaultTableModel) tableservice.getModel();
                model.removeRow(row);
                for (int i = 0; i < tableservice.getRowCount(); i++) {
                    tableservice.setValueAt(i + 1, i, 0);
                }
                row = -1;
            } catch (Exception ex) {
            }
        } else {
            JOptionPane.showMessageDialog(null, "يجب تحديد سطر من الجدول!!");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        // TODO add your handling code here:
        int row = table.getSelectedRow();
        txtname.setText(String.valueOf(table.getValueAt(row, 0)));
        txtprice.setText(String.valueOf(table.getValueAt(row, 1)));
        getTableService(idclincname.get(row));
    }//GEN-LAST:event_tableMouseClicked

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
        // TODO add your handling code here:
        if (table.getSelectedRow() > -1) {
            String statement = "DELETE FROM clincservice WHERE id = " + idclincname.get(table.getSelectedRow()) + "  ;";
            boolean check = Tools.ExecuteStatement(statement);
            if (check) {
                statement = "DELETE FROM clincname WHERE id = " + idclincname.get(table.getSelectedRow()) + "  ;";
                Tools.ExecuteStatement(statement);
                JOptionPane.showMessageDialog(null, "تم الحذف بنجاح");
                resetValue();
                updateTable();
            }
            Tools.closeConnection();
        } else {
            JOptionPane.showMessageDialog(null, "يجب تحديد سطر من الجدول");
        }
    }//GEN-LAST:event_btndeleteActionPerformed

    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed
        // TODO add your handling code here:
        if (table.getSelectedRow() > -1) {
            String statement = "DELETE FROM clincservice WHERE id = " + idclincname.get(table.getSelectedRow()) + "  ;";
            boolean check = Tools.ExecuteStatement(statement);
            if (check) {
                statement = "UPDATE clincname SET name = '" + txtname.getText() + "', price = " + txtprice.getText() + " WHERE id = " + idclincname.get(table.getSelectedRow()) + " ;";
                Tools.ExecuteStatement(statement);
                for (int i = 0; i < tableservice.getRowCount(); i++) {
                    statement = "INSERT INTO clincservice(id, name, price, description) "
                            + "VALUES(" + idclincname.get(table.getSelectedRow()) + ", '" + tableservice.getValueAt(i, 1) + "', '" + tableservice.getValueAt(i, 2) + "', '" + tableservice.getValueAt(i, 3) + "' ) ;";
                    Tools.ExecuteStatement(statement);
                }
                JOptionPane.showMessageDialog(null, "تم التعديل بنجاح");
                resetValue();
                updateTable();
            }
            Tools.closeConnection();
        } else {
            JOptionPane.showMessageDialog(null, "يجب تحديد سطر من الجدول");
        }
    }//GEN-LAST:event_btnupdateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btnupdate;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable table;
    private javax.swing.JTable tableservice;
    private javax.swing.JTextField txtname;
    private javax.swing.JTextField txtprice;
    // End of variables declaration//GEN-END:variables
}
